题目描述
有一个X*Y的网格，小团要在此网格上从左上角到右下角，只能走格点且只能向右或向下走。请设计一个算法，计算小团有多少种走法。给定两个正整数int x,int y，请返回小团的走法数目。
输入描述:
输入包括一行，逗号隔开的两个正整数x和y，取值范围[1,10]。
输出描述:
输出包括一行，为走法的数目。
示例1
输入
复制
3 2
输出
复制
10


#include<iostream>
using namespace std;
/*
把网格看做二维坐标，向下为正，向右为正：
设f(m,n)代表从坐标（0,0）到坐标（m,n）的移动方法，则
f(m,n)=f(m-1,n)+f(m,n-1)
开始为f(0,0)=0,f(0,1)=1,f(1,0)=1
进行递归运算,退出条件就是m,n至少有个为0，否则就要继续递归运算。
*/
int get_ways(int x,int y){
    //if(x==0 &&y==0) return 0;
    if(x==1 &&y==0) return 1;
    if(x==0 &&y==1) return 1;
    if (x==0) return get_ways(x, y-1);
    if (y==0) return get_ways(x-1, y);
    else    
        return get_ways(x-1,y)+get_ways(x,y-1);
}
 
int main(){
    int X,Y;
    cin>>X>>Y;
    cout<<get_ways(X,Y);
    return 0;
}
